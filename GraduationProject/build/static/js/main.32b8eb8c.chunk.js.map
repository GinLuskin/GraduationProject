{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/hooks/auth-hook.js","shared/components/navigation/MainHeader.js","shared/components/navigation/NavLinks.js","shared/components/navigation/SideDrawer.js","shared/components/navigation/MainNavigation.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","console","log","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","i","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","NewPlace","auth","useContext","title","description","address","inputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","Authorization","Map","mapRef","zoom","window","google","maps","Marker","position","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","PlaceList","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","logoutTimer","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.32b8eb8c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = props => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n};\n\nexport default UserItem;\n","import React from \"react\";\n\nimport UserItem from \"./UserItem\";\nimport './UsersList.css';\nimport Card from \"../../shared/components/UIElements/Card\";\n\nconst UsersList = props => {\n    if(props.items.length === 0) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No users found</h2>\n                </Card>\n            </div>\n        )\n    }\n\n    return (\n        <ul className=\"users-list\">\n          {props.items.map(user => (\n            <UserItem\n              key={user.id}\n              id={user.id}\n              image={user.image}\n              name={user.name}\n              placeCount={user.places.length}\n            />\n          ))}\n        </ul>\n      );\n}\n\nexport default UsersList","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n        console.log(response)\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};","import React, { useEffect, useState } from \"react\";\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n    const [loadedUsers, setLoadedUsers] = useState();\n  \n    useEffect(() => {\n      const fetchUsers = async () => {\n        try {\n          const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\n  \n  \n          setLoadedUsers(responseData.users);\n        } catch (err) {}\n      };\n      fetchUsers();\n    }, [sendRequest]);\n  \n  \n    return (\n      <React.Fragment>\n        <ErrorModal error={error} onClear={clearError} />\n        {isLoading && (\n          <div className=\"center\">\n            <LoadingSpinner />\n          </div>\n        )}\n        {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n      </React.Fragment>\n    );\n  };\nexport default Users;","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button'\nimport './ImageUpload.css';\n\nconst ImageUpload = (props) => {\n\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid , setIsValid] = useState(false);\n  \n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid =  isValid;\n    if(event.target.files || event.target.files.length === 1){\n        pickedFile  = event.target.files[0];\n        setFile(pickedFile);\n        setIsValid(true);\n        fileIsValid = true;\n    } else {\n        setIsValid(false);\n        fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type='file'\n        accept='.jpg,.png,.jpeg'\n        onChange={pickedHandler}\n      />\n      <div  className={`image-upload ${props.center && 'center'}`}>\n        <div className='image-upload__preview'>\n            {previewUrl && <img src={previewUrl}  alt=\"Preview\" />}\n            {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if(!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n      case 'SET_DATA':\n        return{\n           inputs: action.inputs,\n           isValid: action.formIsValid\n        };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n      dispatch({\n        type: 'SET_DATA',\n        inputs: inputData, \n        formIsValid: formValidity\n      });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook'\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\n\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext)\n  const { isLoading, error, sendRequest, clearError} = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n  });\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try{\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value); \n      \n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay/>}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload \n          id=\"image\" \n          onInput={inputHandler} \n          errorText=\"Please provide an image.\" \n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n\n  useEffect(() => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: center,\n      zoom: zoom\n    });\n  \n    new window.google.maps.Marker({ position: center, map: map });\n  }, [center, zoom]);  \n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        'DELETE',\n        null,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;","import React from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport PlaceItem from \"./PlaceItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./PlaceList.css\";\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try{\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      }catch(err){}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(\n      prevPlaces => prevPlaces.filter(\n        place => place.id !== deletedPlaceId\n      )\n    )\n  };\n\n\n  return (\n  <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {isLoading && (<div className=\"center\">\n      <LoadingSpinner />\n    </div>\n    )}\n    {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />}\n  </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (min. 5 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image:  undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    console.log(formState.inputs);\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/login',\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData(); \n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/users/signup',\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload \n              center \n              id=\"image\" \n              onInput={inputHandler} \n              errorText=\"Please provide an image.\"\n              />\n            )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import { useState, useCallback, useEffect} from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return {token, login, logout, userId};\n};","import React from \"react\";\n\nimport './MainHeader.css'\n\nconst MainHeader = props =>{\n    return <header className=\"main-header\">{props.children}</header>\n}\n\nexport default MainHeader;","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n            <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport  ReactDOM  from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n    const content = \n    <CSSTransition \n        in={props.show} \n        timeout={200} \n        classNames=\"slide-in-left\"\n        mountOnEnter\n        unmountOnExit\n    >\n        <aside \n        className=\"side-drawer\"\n        onClick={props.onClick}\n        >\n            {props.children}\n        </aside>\n    </CSSTransition>\n\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'))\n}\n\nexport default SideDrawer","import React, { useState } from \"react\";\nimport { Link }   from 'react-router-dom'\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport './MainNavigation.css'\n\nconst MainNavigation = props =>{\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n\n    const openDrawerHandler = () => {\n        setDrawerIsOpen(true)\n    }\n\nconst closeDrawerHandler = () => {\n    setDrawerIsOpen(false)\n}\n\n    return (\n        <React.Fragment>\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>}\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n                <nav className=\"main-navigation__drawer-nav\">\n                    <NavLinks />\n                </nav>\n            </SideDrawer>\n            <MainHeader>\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n                    <span />\n                    <span />\n                    <span />\n                </button>\n                <h1 className=\"main-navigation__title\">\n                    <Link to='/'>YourPlaces</Link>\n                </h1>\n                <nav className=\"main-navigation__header-nav\">\n                    <NavLinks />\n                </nav>\n            </MainHeader>\n        </React.Fragment>\n    )\n}\n\nexport default MainNavigation","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId} = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}